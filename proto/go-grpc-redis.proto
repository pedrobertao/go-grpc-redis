syntax = "proto3";

package goredis;

option go_package="proto/proto;goredispb";

// Result status code
enum ResultStatus {
    UNKNOWN = 0;
    SUCCESS = 1;
    FAIL = 2;
    NOTFOUND = 3;
    UPDATED = 4;
  }

  // HTTP result message
enum HttpMessage {
    UNSPECIFIED = 0;
    PROCESSING = 1;
    OK = 2;
    CREATED = 3;
    NO_CONTENT = 4;
    PARTIAL_CONTENT = 5;
    FOUND = 6;
    BAD_REQUEST = 7;
    UNAUTHORIZED  = 8;
    FORBIDDEN = 9;
    NOT_FOUND = 10;
    METHOD_NOT_ALLOWED = 11;
    REQUEST_TIMEOUT = 12;
    TOO_MANY_REQUESTS = 13;
    CLIENT_CLOSED_REQUEST = 14;
    INTERNAL_SERVER_ERROR = 15;
    NOT_IMPLEMENTED = 16;
    BAD_GATEWAY = 17;
    SERVICE_UNAVAILABLE = 18;
    NETWORK_AUTHENTICATION_REQUIRED = 19;
    NETWORK_CONNECT_TIMEOUT_ERROR = 20;
  }

message GetRequest {
    string key = 1;
}

message GetResponse {
     int32 resultCode = 1;
     HttpMessage resultMessage = 2;
     string result = 3;
}

message SetRequest {
    string key = 1;
    string value = 2;
}

message SetResponse {
     int32 resultCode = 1;
     HttpMessage resultMessage = 2;
     string result = 3;
}


message DeleteRequest {
    string key = 1;
}

message DeleteResponse {
     int32 resultCode = 1;
     HttpMessage resultMessage = 2;
     string result = 3;
}


message UpdateRequest {
    string key = 1;
    string value = 2;
}

message UpdateResponse {
     int32 resultCode = 1;
     HttpMessage resultMessage = 2;
     string result = 3;
}

message Empty {

}

message HealthResponse {
    uint32 message = 1;
}


service CacheService{
    rpc Get(GetRequest) returns (GetResponse);

    rpc Set(SetRequest) returns (SetResponse);

    rpc Delete(DeleteRequest) returns (DeleteResponse);

    rpc Health(Empty) returns (HealthResponse);
}
